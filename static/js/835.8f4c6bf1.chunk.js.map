{"version":3,"file":"static/js/835.8f4c6bf1.chunk.js","mappings":"+LAwGA,QApGA,WACE,MAoFMA,EAAO,CApFJ,g7BAmDA,mnBAkCT,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPD,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,QAAS,MAAON,SAClEO,MAAMC,KAAKX,GAAM,CAACY,EAAGC,KACpBT,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAEQ,MAAO,OAAQX,UAC3BC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAASf,KAAMY,GAATC,WAM5B,C,wDChGA,MA8CA,EA9C4CG,IAAe,IAAd,KAAEhB,GAAMgB,EACnD,MAAOC,EAAQC,IAAWC,EAAAA,EAAAA,WAAkB,GAS5C,OACEf,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,OACEK,MAAO,CACLC,QAAS,OACTC,cAAe,MACfY,WAAY,SACZC,eAAgB,gBAChBC,SAAU,WACVC,gBAAiB,UACjBd,QAAS,MACTe,aAAc,MACdC,OAAQ,QACRtB,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAEoB,WAAY,WAAYC,SAAU,cAAexB,UAC7DC,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,OAETI,EAAAA,EAAAA,KAAA,UACEwB,QA3BgBC,KACtBC,UAAUC,UAAUC,UAAUhC,GAC9BkB,GAAQ,GACRe,YAAW,KACTf,GAAQ,EAAM,GACb,IAAK,EAuBFZ,MAAO,CACLiB,gBAAiB,QACjBW,MAAO,OACPC,OAAQ,OACRX,aAAc,MACdf,QAAS,MACT2B,OAAQ,WACRjC,SAEDc,EAAS,SAAW,aAGrB,C","sources":["component/ReactLifecycle.tsx","sections/CodeBlock.tsx"],"sourcesContent":["import React from \"react\";\r\nimport CodeBlock from \"../sections/CodeBlock\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Note() {\r\n  const c_0 = `import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface AppProps {}\r\n\r\ninterface ChildProps {\r\n  name: string;\r\n}\r\n\r\ninterface ChildState {\r\n  name: string;\r\n}\r\n\r\nclass App extends React.Component<AppProps> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Child name=\"sachin\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Child extends React.Component<ChildProps, ChildState> {\r\n  constructor(props: ChildProps) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"kapil\"\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: ChildProps, prevState: ChildState) {\r\n    if (nextProps.name !== prevState.name) {\r\n      // Change in props\r\n      return {\r\n        name: nextProps.name\r\n      };\r\n    }\r\n    return null; // No change to state\r\n  }\r\n\r\n  render() {\r\n    return <div>My name is {this.state.name}</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n`;\r\n\r\n  const c_1 = `import React, { useState, useEffect } from 'react';\r\n\r\ninterface AppProps {}\r\n\r\ninterface ChildProps {\r\n  name: string;\r\n}\r\n\r\nconst App: React.FC<AppProps> = () => {\r\n  return (\r\n    <div>\r\n      <Child name=\"sachin\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Child: React.FC<ChildProps> = ({ name }) => {\r\n  const [currentName, setCurrentName] = useState(\"kapil\");\r\n\r\n  useEffect(() => {\r\n    if (name !== currentName) {\r\n      setCurrentName(name);\r\n    }\r\n  }, [name, currentName]);\r\n\r\n  return <div>My name is {currentName}</div>;\r\n};\r\n\r\nexport default App;\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n`;\r\n\r\n  const code = [c_0, c_1];\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"5%\" }}>\r\n        {Array.from(code, (v, i) => (\r\n          <div style={{ width: \"50%\" }}>\r\n            <CodeBlock key={i} code={v} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\n\r\ninterface CodeBlockProps {\r\n  code: string;\r\n}\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code }) => {\r\n  const [isCopy, setCopy] = useState<boolean>(false);\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(code);\r\n    setCopy(true);\r\n    setTimeout(() => {\r\n      setCopy(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          position: \"relative\",\r\n          backgroundColor: \"#f5f5f5\",\r\n          padding: \"8px\",\r\n          borderRadius: \"8px\",\r\n          margin: \"20px\",\r\n        }}\r\n      >\r\n        <pre style={{ whiteSpace: \"pre-wrap\", wordWrap: \"break-word\" }}>\r\n          <code>{code}</code>\r\n        </pre>\r\n        <button\r\n          onClick={copyToClipboard}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            color: \"gray\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            padding: \"8px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          {isCopy ? \"Copied\" : \"Copy\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock;\r\n"],"names":["code","_jsxs","_Fragment","children","_jsx","Navbar","style","display","flexDirection","padding","Array","from","v","i","width","CodeBlock","_ref","isCopy","setCopy","useState","alignItems","justifyContent","position","backgroundColor","borderRadius","margin","whiteSpace","wordWrap","onClick","copyToClipboard","navigator","clipboard","writeText","setTimeout","color","border","cursor"],"sourceRoot":""}